using System.ComponentModel;
using HansKindberg.Text.Formatting.Configuration;
using HansKindberg.Text.Formatting.Json;
using HansKindberg.Text.Formatting.Json.Configuration;
using Shared.Extensions;

namespace UnitTests.Json
{
	public class JsonFormatterTest
	{
		#region Methods

		private static async Task<JsonFormatOptions> CreateJsonFormatOptions(char indentationCharacter, bool indentationEnabled, byte indentationSize, bool sortingEnabled, ListSortDirection sortingDirection)
		{
			await Task.CompletedTask;

			return new JsonFormatOptions
			{
				Indentation = new IndentationOptions
				{
					Character = indentationCharacter,
					Enabled = indentationEnabled,
					Size = indentationSize
				},
				Sorting = new SortingOptions
				{
					Direction = sortingDirection,
					Enabled = sortingEnabled
				}
			};
		}

		[Theory]
		[InlineData("{\"a\":\"b\",\"c\":{\"d\":\"e\",\"f\":\"g\"},\"h\":[{\"i\":\"j\"},{\"k\":\"l\"}]}", "{\n\t\"a\": \"b\",\n\t\"c\": {\n\t\t\"d\": \"e\",\n\t\t\"f\": \"g\"\n\t},\n\t\"h\": [\n\t\t{\n\t\t\t\"i\": \"j\"\n\t\t},\n\t\t{\n\t\t\t\"k\": \"l\"\n\t\t}\n\t]\n}", '\t', true, 1, true, ListSortDirection.Ascending)]
		[InlineData("{\"a\":\"b\",\"c\":{\"d\":\"e\",\"f\":\"g\"},\"h\":[{\"i\":\"j\"},{\"k\":\"l\"}]}", "{\n\t\"h\": [\n\t\t{\n\t\t\t\"i\": \"j\"\n\t\t},\n\t\t{\n\t\t\t\"k\": \"l\"\n\t\t}\n\t],\n\t\"c\": {\n\t\t\"f\": \"g\",\n\t\t\"d\": \"e\"\n\t},\n\t\"a\": \"b\"\n}", '\t', true, 1, true, ListSortDirection.Descending)]
		[InlineData("{\"a\":\"b\",\"c\":{\"d\":\"e\",\"f\":\"g\"},\"h\":[{\"i\":\"j\"},{\"k\":\"l\"}]}", "{\n\t\t\t\t\"a\": \"b\",\n\t\t\t\t\"c\": {\n\t\t\t\t\t\t\t\t\"d\": \"e\",\n\t\t\t\t\t\t\t\t\"f\": \"g\"\n\t\t\t\t},\n\t\t\t\t\"h\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"i\": \"j\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"k\": \"l\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t]\n}", '\t', true, 4, true, ListSortDirection.Ascending)]
		[InlineData("{\"a\":\"b\",\"c\":{\"d\":\"e\",\"f\":\"g\"},\"h\":[{\"i\":\"j\"},{\"k\":\"l\"}]}", "{\n\t\t\t\t\"h\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"i\": \"j\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"k\": \"l\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"c\": {\n\t\t\t\t\t\t\t\t\"f\": \"g\",\n\t\t\t\t\t\t\t\t\"d\": \"e\"\n\t\t\t\t},\n\t\t\t\t\"a\": \"b\"\n}", '\t', true, 4, true, ListSortDirection.Descending)]
		[InlineData("{\"a\":\"b\",\"c\":{\"d\":\"e\",\"f\":\"g\"},\"h\":{\"i\":\"j\",\"k\":\"l\"},\"m\":[{\"n\":\"o\"},{\"p\":\"q\"}],\"r\":[\"1\",\"2\",\"3\",\"4\",\"5\"],\"s\":{\"1\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"2\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"3\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"4\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"5\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"}}}", "{\n  \"a\": \"b\",\n  \"c\": {\n    \"d\": \"e\",\n    \"f\": \"g\"\n  },\n  \"h\": {\n    \"i\": \"j\",\n    \"k\": \"l\"\n  },\n  \"m\": [\n    {\n      \"n\": \"o\"\n    },\n    {\n      \"p\": \"q\"\n    }\n  ],\n  \"r\": [\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\"\n  ],\n  \"s\": {\n    \"1\": {\n      \"1\": \"2\",\n      \"3\": \"4\",\n      \"5\": \"6\"\n    },\n    \"2\": {\n      \"1\": \"2\",\n      \"3\": \"4\",\n      \"5\": \"6\"\n    },\n    \"3\": {\n      \"1\": \"2\",\n      \"3\": \"4\",\n      \"5\": \"6\"\n    },\n    \"4\": {\n      \"1\": \"2\",\n      \"3\": \"4\",\n      \"5\": \"6\"\n    },\n    \"5\": {\n      \"1\": \"2\",\n      \"3\": \"4\",\n      \"5\": \"6\"\n    }\n  }\n}", ' ', true, 2, true, ListSortDirection.Ascending)]
		[InlineData("{\"a\":\"b\",\"c\":{\"d\":\"e\",\"f\":\"g\"},\"h\":{\"i\":\"j\",\"k\":\"l\"},\"m\":[{\"n\":\"o\"},{\"p\":\"q\"}],\"r\":[\"1\",\"2\",\"3\",\"4\",\"5\"],\"s\":{\"1\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"2\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"3\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"4\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"5\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"}}}", "{\n  \"s\": {\n    \"5\": {\n      \"5\": \"6\",\n      \"3\": \"4\",\n      \"1\": \"2\"\n    },\n    \"4\": {\n      \"5\": \"6\",\n      \"3\": \"4\",\n      \"1\": \"2\"\n    },\n    \"3\": {\n      \"5\": \"6\",\n      \"3\": \"4\",\n      \"1\": \"2\"\n    },\n    \"2\": {\n      \"5\": \"6\",\n      \"3\": \"4\",\n      \"1\": \"2\"\n    },\n    \"1\": {\n      \"5\": \"6\",\n      \"3\": \"4\",\n      \"1\": \"2\"\n    }\n  },\n  \"r\": [\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\"\n  ],\n  \"m\": [\n    {\n      \"n\": \"o\"\n    },\n    {\n      \"p\": \"q\"\n    }\n  ],\n  \"h\": {\n    \"k\": \"l\",\n    \"i\": \"j\"\n  },\n  \"c\": {\n    \"f\": \"g\",\n    \"d\": \"e\"\n  },\n  \"a\": \"b\"\n}", ' ', true, 2, true, ListSortDirection.Descending)]
		[InlineData("[{},{},{}]", "[{},{},{}]", '\t', false, 1, true, ListSortDirection.Ascending)]
		[InlineData("[{},{},{}]", "[{},{},{}]", ' ', false, 2, true, ListSortDirection.Ascending)]
		[InlineData("[{\"a\":\"b\",\"c\":{\"d\":\"e\",\"f\":\"g\"},\"h\":{\"i\":\"j\",\"k\":\"l\"},\"m\":[{\"n\":\"o\"},{\"p\":\"q\"}],\"r\":[\"1\",\"2\",\"3\",\"4\",\"5\"],\"s\":{\"1\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"2\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"3\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"4\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"5\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"}}},{\"a\":\"b\",\"c\":{\"d\":\"e\",\"f\":\"g\"},\"h\":{\"i\":\"j\",\"k\":\"l\"},\"m\":[{\"n\":\"o\"},{\"p\":\"q\"}],\"r\":[\"1\",\"2\",\"3\",\"4\",\"5\"],\"s\":{\"1\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"2\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"3\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"4\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"5\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"}}},{\"a\":\"b\",\"c\":{\"d\":\"e\",\"f\":\"g\"},\"h\":{\"i\":\"j\",\"k\":\"l\"},\"m\":[{\"n\":\"o\"},{\"p\":\"q\"}],\"r\":[\"1\",\"2\",\"3\",\"4\",\"5\"],\"s\":{\"1\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"2\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"3\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"4\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"5\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"}}}]", "[\n\t{\n\t\t\"a\": \"b\",\n\t\t\"c\": {\n\t\t\t\"d\": \"e\",\n\t\t\t\"f\": \"g\"\n\t\t},\n\t\t\"h\": {\n\t\t\t\"i\": \"j\",\n\t\t\t\"k\": \"l\"\n\t\t},\n\t\t\"m\": [\n\t\t\t{\n\t\t\t\t\"n\": \"o\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"p\": \"q\"\n\t\t\t}\n\t\t],\n\t\t\"r\": [\n\t\t\t\"1\",\n\t\t\t\"2\",\n\t\t\t\"3\",\n\t\t\t\"4\",\n\t\t\t\"5\"\n\t\t],\n\t\t\"s\": {\n\t\t\t\"1\": {\n\t\t\t\t\"1\": \"2\",\n\t\t\t\t\"3\": \"4\",\n\t\t\t\t\"5\": \"6\"\n\t\t\t},\n\t\t\t\"2\": {\n\t\t\t\t\"1\": \"2\",\n\t\t\t\t\"3\": \"4\",\n\t\t\t\t\"5\": \"6\"\n\t\t\t},\n\t\t\t\"3\": {\n\t\t\t\t\"1\": \"2\",\n\t\t\t\t\"3\": \"4\",\n\t\t\t\t\"5\": \"6\"\n\t\t\t},\n\t\t\t\"4\": {\n\t\t\t\t\"1\": \"2\",\n\t\t\t\t\"3\": \"4\",\n\t\t\t\t\"5\": \"6\"\n\t\t\t},\n\t\t\t\"5\": {\n\t\t\t\t\"1\": \"2\",\n\t\t\t\t\"3\": \"4\",\n\t\t\t\t\"5\": \"6\"\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\t\"a\": \"b\",\n\t\t\"c\": {\n\t\t\t\"d\": \"e\",\n\t\t\t\"f\": \"g\"\n\t\t},\n\t\t\"h\": {\n\t\t\t\"i\": \"j\",\n\t\t\t\"k\": \"l\"\n\t\t},\n\t\t\"m\": [\n\t\t\t{\n\t\t\t\t\"n\": \"o\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"p\": \"q\"\n\t\t\t}\n\t\t],\n\t\t\"r\": [\n\t\t\t\"1\",\n\t\t\t\"2\",\n\t\t\t\"3\",\n\t\t\t\"4\",\n\t\t\t\"5\"\n\t\t],\n\t\t\"s\": {\n\t\t\t\"1\": {\n\t\t\t\t\"1\": \"2\",\n\t\t\t\t\"3\": \"4\",\n\t\t\t\t\"5\": \"6\"\n\t\t\t},\n\t\t\t\"2\": {\n\t\t\t\t\"1\": \"2\",\n\t\t\t\t\"3\": \"4\",\n\t\t\t\t\"5\": \"6\"\n\t\t\t},\n\t\t\t\"3\": {\n\t\t\t\t\"1\": \"2\",\n\t\t\t\t\"3\": \"4\",\n\t\t\t\t\"5\": \"6\"\n\t\t\t},\n\t\t\t\"4\": {\n\t\t\t\t\"1\": \"2\",\n\t\t\t\t\"3\": \"4\",\n\t\t\t\t\"5\": \"6\"\n\t\t\t},\n\t\t\t\"5\": {\n\t\t\t\t\"1\": \"2\",\n\t\t\t\t\"3\": \"4\",\n\t\t\t\t\"5\": \"6\"\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\t\"a\": \"b\",\n\t\t\"c\": {\n\t\t\t\"d\": \"e\",\n\t\t\t\"f\": \"g\"\n\t\t},\n\t\t\"h\": {\n\t\t\t\"i\": \"j\",\n\t\t\t\"k\": \"l\"\n\t\t},\n\t\t\"m\": [\n\t\t\t{\n\t\t\t\t\"n\": \"o\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"p\": \"q\"\n\t\t\t}\n\t\t],\n\t\t\"r\": [\n\t\t\t\"1\",\n\t\t\t\"2\",\n\t\t\t\"3\",\n\t\t\t\"4\",\n\t\t\t\"5\"\n\t\t],\n\t\t\"s\": {\n\t\t\t\"1\": {\n\t\t\t\t\"1\": \"2\",\n\t\t\t\t\"3\": \"4\",\n\t\t\t\t\"5\": \"6\"\n\t\t\t},\n\t\t\t\"2\": {\n\t\t\t\t\"1\": \"2\",\n\t\t\t\t\"3\": \"4\",\n\t\t\t\t\"5\": \"6\"\n\t\t\t},\n\t\t\t\"3\": {\n\t\t\t\t\"1\": \"2\",\n\t\t\t\t\"3\": \"4\",\n\t\t\t\t\"5\": \"6\"\n\t\t\t},\n\t\t\t\"4\": {\n\t\t\t\t\"1\": \"2\",\n\t\t\t\t\"3\": \"4\",\n\t\t\t\t\"5\": \"6\"\n\t\t\t},\n\t\t\t\"5\": {\n\t\t\t\t\"1\": \"2\",\n\t\t\t\t\"3\": \"4\",\n\t\t\t\t\"5\": \"6\"\n\t\t\t}\n\t\t}\n\t}\n]", '\t', true, 1, true, ListSortDirection.Ascending)]
		[InlineData("[{\"a\":\"b\",\"c\":{\"d\":\"e\",\"f\":\"g\"},\"h\":{\"i\":\"j\",\"k\":\"l\"},\"m\":[{\"n\":\"o\"},{\"p\":\"q\"}],\"r\":[\"1\",\"2\",\"3\",\"4\",\"5\"],\"s\":{\"1\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"2\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"3\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"4\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"5\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"}}},{\"a\":\"b\",\"c\":{\"d\":\"e\",\"f\":\"g\"},\"h\":{\"i\":\"j\",\"k\":\"l\"},\"m\":[{\"n\":\"o\"},{\"p\":\"q\"}],\"r\":[\"1\",\"2\",\"3\",\"4\",\"5\"],\"s\":{\"1\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"2\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"3\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"4\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"5\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"}}},{\"a\":\"b\",\"c\":{\"d\":\"e\",\"f\":\"g\"},\"h\":{\"i\":\"j\",\"k\":\"l\"},\"m\":[{\"n\":\"o\"},{\"p\":\"q\"}],\"r\":[\"1\",\"2\",\"3\",\"4\",\"5\"],\"s\":{\"1\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"2\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"3\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"4\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"5\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"}}}]", "[\n\t{\n\t\t\"s\": {\n\t\t\t\"5\": {\n\t\t\t\t\"5\": \"6\",\n\t\t\t\t\"3\": \"4\",\n\t\t\t\t\"1\": \"2\"\n\t\t\t},\n\t\t\t\"4\": {\n\t\t\t\t\"5\": \"6\",\n\t\t\t\t\"3\": \"4\",\n\t\t\t\t\"1\": \"2\"\n\t\t\t},\n\t\t\t\"3\": {\n\t\t\t\t\"5\": \"6\",\n\t\t\t\t\"3\": \"4\",\n\t\t\t\t\"1\": \"2\"\n\t\t\t},\n\t\t\t\"2\": {\n\t\t\t\t\"5\": \"6\",\n\t\t\t\t\"3\": \"4\",\n\t\t\t\t\"1\": \"2\"\n\t\t\t},\n\t\t\t\"1\": {\n\t\t\t\t\"5\": \"6\",\n\t\t\t\t\"3\": \"4\",\n\t\t\t\t\"1\": \"2\"\n\t\t\t}\n\t\t},\n\t\t\"r\": [\n\t\t\t\"1\",\n\t\t\t\"2\",\n\t\t\t\"3\",\n\t\t\t\"4\",\n\t\t\t\"5\"\n\t\t],\n\t\t\"m\": [\n\t\t\t{\n\t\t\t\t\"n\": \"o\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"p\": \"q\"\n\t\t\t}\n\t\t],\n\t\t\"h\": {\n\t\t\t\"k\": \"l\",\n\t\t\t\"i\": \"j\"\n\t\t},\n\t\t\"c\": {\n\t\t\t\"f\": \"g\",\n\t\t\t\"d\": \"e\"\n\t\t},\n\t\t\"a\": \"b\"\n\t},\n\t{\n\t\t\"s\": {\n\t\t\t\"5\": {\n\t\t\t\t\"5\": \"6\",\n\t\t\t\t\"3\": \"4\",\n\t\t\t\t\"1\": \"2\"\n\t\t\t},\n\t\t\t\"4\": {\n\t\t\t\t\"5\": \"6\",\n\t\t\t\t\"3\": \"4\",\n\t\t\t\t\"1\": \"2\"\n\t\t\t},\n\t\t\t\"3\": {\n\t\t\t\t\"5\": \"6\",\n\t\t\t\t\"3\": \"4\",\n\t\t\t\t\"1\": \"2\"\n\t\t\t},\n\t\t\t\"2\": {\n\t\t\t\t\"5\": \"6\",\n\t\t\t\t\"3\": \"4\",\n\t\t\t\t\"1\": \"2\"\n\t\t\t},\n\t\t\t\"1\": {\n\t\t\t\t\"5\": \"6\",\n\t\t\t\t\"3\": \"4\",\n\t\t\t\t\"1\": \"2\"\n\t\t\t}\n\t\t},\n\t\t\"r\": [\n\t\t\t\"1\",\n\t\t\t\"2\",\n\t\t\t\"3\",\n\t\t\t\"4\",\n\t\t\t\"5\"\n\t\t],\n\t\t\"m\": [\n\t\t\t{\n\t\t\t\t\"n\": \"o\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"p\": \"q\"\n\t\t\t}\n\t\t],\n\t\t\"h\": {\n\t\t\t\"k\": \"l\",\n\t\t\t\"i\": \"j\"\n\t\t},\n\t\t\"c\": {\n\t\t\t\"f\": \"g\",\n\t\t\t\"d\": \"e\"\n\t\t},\n\t\t\"a\": \"b\"\n\t},\n\t{\n\t\t\"s\": {\n\t\t\t\"5\": {\n\t\t\t\t\"5\": \"6\",\n\t\t\t\t\"3\": \"4\",\n\t\t\t\t\"1\": \"2\"\n\t\t\t},\n\t\t\t\"4\": {\n\t\t\t\t\"5\": \"6\",\n\t\t\t\t\"3\": \"4\",\n\t\t\t\t\"1\": \"2\"\n\t\t\t},\n\t\t\t\"3\": {\n\t\t\t\t\"5\": \"6\",\n\t\t\t\t\"3\": \"4\",\n\t\t\t\t\"1\": \"2\"\n\t\t\t},\n\t\t\t\"2\": {\n\t\t\t\t\"5\": \"6\",\n\t\t\t\t\"3\": \"4\",\n\t\t\t\t\"1\": \"2\"\n\t\t\t},\n\t\t\t\"1\": {\n\t\t\t\t\"5\": \"6\",\n\t\t\t\t\"3\": \"4\",\n\t\t\t\t\"1\": \"2\"\n\t\t\t}\n\t\t},\n\t\t\"r\": [\n\t\t\t\"1\",\n\t\t\t\"2\",\n\t\t\t\"3\",\n\t\t\t\"4\",\n\t\t\t\"5\"\n\t\t],\n\t\t\"m\": [\n\t\t\t{\n\t\t\t\t\"n\": \"o\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"p\": \"q\"\n\t\t\t}\n\t\t],\n\t\t\"h\": {\n\t\t\t\"k\": \"l\",\n\t\t\t\"i\": \"j\"\n\t\t},\n\t\t\"c\": {\n\t\t\t\"f\": \"g\",\n\t\t\t\"d\": \"e\"\n\t\t},\n\t\t\"a\": \"b\"\n\t}\n]", '\t', true, 1, true, ListSortDirection.Descending)]
		[InlineData("[{\"a\":\"b\",\"c\":{\"d\":\"e\",\"f\":\"g\"},\"h\":{\"i\":\"j\",\"k\":\"l\"},\"m\":[{\"n\":\"o\"},{\"p\":\"q\"}],\"r\":[\"1\",\"2\",\"3\",\"4\",\"5\"],\"s\":{\"1\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"2\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"3\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"4\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"5\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"}}},{\"a\":\"b\",\"c\":{\"d\":\"e\",\"f\":\"g\"},\"h\":{\"i\":\"j\",\"k\":\"l\"},\"m\":[{\"n\":\"o\"},{\"p\":\"q\"}],\"r\":[\"1\",\"2\",\"3\",\"4\",\"5\"],\"s\":{\"1\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"2\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"3\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"4\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"5\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"}}},{\"a\":\"b\",\"c\":{\"d\":\"e\",\"f\":\"g\"},\"h\":{\"i\":\"j\",\"k\":\"l\"},\"m\":[{\"n\":\"o\"},{\"p\":\"q\"}],\"r\":[\"1\",\"2\",\"3\",\"4\",\"5\"],\"s\":{\"1\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"2\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"3\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"4\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"5\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"}}}]", "[\n  {\n    \"a\": \"b\",\n    \"c\": {\n      \"d\": \"e\",\n      \"f\": \"g\"\n    },\n    \"h\": {\n      \"i\": \"j\",\n      \"k\": \"l\"\n    },\n    \"m\": [\n      {\n        \"n\": \"o\"\n      },\n      {\n        \"p\": \"q\"\n      }\n    ],\n    \"r\": [\n      \"1\",\n      \"2\",\n      \"3\",\n      \"4\",\n      \"5\"\n    ],\n    \"s\": {\n      \"1\": {\n        \"1\": \"2\",\n        \"3\": \"4\",\n        \"5\": \"6\"\n      },\n      \"2\": {\n        \"1\": \"2\",\n        \"3\": \"4\",\n        \"5\": \"6\"\n      },\n      \"3\": {\n        \"1\": \"2\",\n        \"3\": \"4\",\n        \"5\": \"6\"\n      },\n      \"4\": {\n        \"1\": \"2\",\n        \"3\": \"4\",\n        \"5\": \"6\"\n      },\n      \"5\": {\n        \"1\": \"2\",\n        \"3\": \"4\",\n        \"5\": \"6\"\n      }\n    }\n  },\n  {\n    \"a\": \"b\",\n    \"c\": {\n      \"d\": \"e\",\n      \"f\": \"g\"\n    },\n    \"h\": {\n      \"i\": \"j\",\n      \"k\": \"l\"\n    },\n    \"m\": [\n      {\n        \"n\": \"o\"\n      },\n      {\n        \"p\": \"q\"\n      }\n    ],\n    \"r\": [\n      \"1\",\n      \"2\",\n      \"3\",\n      \"4\",\n      \"5\"\n    ],\n    \"s\": {\n      \"1\": {\n        \"1\": \"2\",\n        \"3\": \"4\",\n        \"5\": \"6\"\n      },\n      \"2\": {\n        \"1\": \"2\",\n        \"3\": \"4\",\n        \"5\": \"6\"\n      },\n      \"3\": {\n        \"1\": \"2\",\n        \"3\": \"4\",\n        \"5\": \"6\"\n      },\n      \"4\": {\n        \"1\": \"2\",\n        \"3\": \"4\",\n        \"5\": \"6\"\n      },\n      \"5\": {\n        \"1\": \"2\",\n        \"3\": \"4\",\n        \"5\": \"6\"\n      }\n    }\n  },\n  {\n    \"a\": \"b\",\n    \"c\": {\n      \"d\": \"e\",\n      \"f\": \"g\"\n    },\n    \"h\": {\n      \"i\": \"j\",\n      \"k\": \"l\"\n    },\n    \"m\": [\n      {\n        \"n\": \"o\"\n      },\n      {\n        \"p\": \"q\"\n      }\n    ],\n    \"r\": [\n      \"1\",\n      \"2\",\n      \"3\",\n      \"4\",\n      \"5\"\n    ],\n    \"s\": {\n      \"1\": {\n        \"1\": \"2\",\n        \"3\": \"4\",\n        \"5\": \"6\"\n      },\n      \"2\": {\n        \"1\": \"2\",\n        \"3\": \"4\",\n        \"5\": \"6\"\n      },\n      \"3\": {\n        \"1\": \"2\",\n        \"3\": \"4\",\n        \"5\": \"6\"\n      },\n      \"4\": {\n        \"1\": \"2\",\n        \"3\": \"4\",\n        \"5\": \"6\"\n      },\n      \"5\": {\n        \"1\": \"2\",\n        \"3\": \"4\",\n        \"5\": \"6\"\n      }\n    }\n  }\n]", ' ', true, 2, true, ListSortDirection.Ascending)]
		[InlineData("[{\"a\":\"b\",\"c\":{\"d\":\"e\",\"f\":\"g\"},\"h\":{\"i\":\"j\",\"k\":\"l\"},\"m\":[{\"n\":\"o\"},{\"p\":\"q\"}],\"r\":[\"1\",\"2\",\"3\",\"4\",\"5\"],\"s\":{\"1\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"2\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"3\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"4\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"5\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"}}},{\"a\":\"b\",\"c\":{\"d\":\"e\",\"f\":\"g\"},\"h\":{\"i\":\"j\",\"k\":\"l\"},\"m\":[{\"n\":\"o\"},{\"p\":\"q\"}],\"r\":[\"1\",\"2\",\"3\",\"4\",\"5\"],\"s\":{\"1\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"2\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"3\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"4\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"5\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"}}},{\"a\":\"b\",\"c\":{\"d\":\"e\",\"f\":\"g\"},\"h\":{\"i\":\"j\",\"k\":\"l\"},\"m\":[{\"n\":\"o\"},{\"p\":\"q\"}],\"r\":[\"1\",\"2\",\"3\",\"4\",\"5\"],\"s\":{\"1\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"2\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"3\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"4\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"},\"5\":{\"1\":\"2\",\"3\":\"4\",\"5\":\"6\"}}}]", "[\n  {\n    \"s\": {\n      \"5\": {\n        \"5\": \"6\",\n        \"3\": \"4\",\n        \"1\": \"2\"\n      },\n      \"4\": {\n        \"5\": \"6\",\n        \"3\": \"4\",\n        \"1\": \"2\"\n      },\n      \"3\": {\n        \"5\": \"6\",\n        \"3\": \"4\",\n        \"1\": \"2\"\n      },\n      \"2\": {\n        \"5\": \"6\",\n        \"3\": \"4\",\n        \"1\": \"2\"\n      },\n      \"1\": {\n        \"5\": \"6\",\n        \"3\": \"4\",\n        \"1\": \"2\"\n      }\n    },\n    \"r\": [\n      \"1\",\n      \"2\",\n      \"3\",\n      \"4\",\n      \"5\"\n    ],\n    \"m\": [\n      {\n        \"n\": \"o\"\n      },\n      {\n        \"p\": \"q\"\n      }\n    ],\n    \"h\": {\n      \"k\": \"l\",\n      \"i\": \"j\"\n    },\n    \"c\": {\n      \"f\": \"g\",\n      \"d\": \"e\"\n    },\n    \"a\": \"b\"\n  },\n  {\n    \"s\": {\n      \"5\": {\n        \"5\": \"6\",\n        \"3\": \"4\",\n        \"1\": \"2\"\n      },\n      \"4\": {\n        \"5\": \"6\",\n        \"3\": \"4\",\n        \"1\": \"2\"\n      },\n      \"3\": {\n        \"5\": \"6\",\n        \"3\": \"4\",\n        \"1\": \"2\"\n      },\n      \"2\": {\n        \"5\": \"6\",\n        \"3\": \"4\",\n        \"1\": \"2\"\n      },\n      \"1\": {\n        \"5\": \"6\",\n        \"3\": \"4\",\n        \"1\": \"2\"\n      }\n    },\n    \"r\": [\n      \"1\",\n      \"2\",\n      \"3\",\n      \"4\",\n      \"5\"\n    ],\n    \"m\": [\n      {\n        \"n\": \"o\"\n      },\n      {\n        \"p\": \"q\"\n      }\n    ],\n    \"h\": {\n      \"k\": \"l\",\n      \"i\": \"j\"\n    },\n    \"c\": {\n      \"f\": \"g\",\n      \"d\": \"e\"\n    },\n    \"a\": \"b\"\n  },\n  {\n    \"s\": {\n      \"5\": {\n        \"5\": \"6\",\n        \"3\": \"4\",\n        \"1\": \"2\"\n      },\n      \"4\": {\n        \"5\": \"6\",\n        \"3\": \"4\",\n        \"1\": \"2\"\n      },\n      \"3\": {\n        \"5\": \"6\",\n        \"3\": \"4\",\n        \"1\": \"2\"\n      },\n      \"2\": {\n        \"5\": \"6\",\n        \"3\": \"4\",\n        \"1\": \"2\"\n      },\n      \"1\": {\n        \"5\": \"6\",\n        \"3\": \"4\",\n        \"1\": \"2\"\n      }\n    },\n    \"r\": [\n      \"1\",\n      \"2\",\n      \"3\",\n      \"4\",\n      \"5\"\n    ],\n    \"m\": [\n      {\n        \"n\": \"o\"\n      },\n      {\n        \"p\": \"q\"\n      }\n    ],\n    \"h\": {\n      \"k\": \"l\",\n      \"i\": \"j\"\n    },\n    \"c\": {\n      \"f\": \"g\",\n      \"d\": \"e\"\n    },\n    \"a\": \"b\"\n  }\n]", ' ', true, 2, true, ListSortDirection.Descending)]
		public async Task Format_ShouldWorkProperly(string text, string expected, char indentationCharacter, bool indentationEnabled, byte indentationSize, bool sortingEnabled, ListSortDirection sortingDirection)
		{
			text = text.ResolveNewLine();
			expected = expected.ResolveNewLine();

			var options = await CreateJsonFormatOptions(indentationCharacter, indentationEnabled, indentationSize, sortingEnabled, sortingDirection);

			var jsonFormatter = new JsonFormatter(new JsonParser());
			var formatted = await jsonFormatter.Format(options, text);
			Assert.Equal(expected, formatted);
		}

		#endregion
	}
}